{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{toast}from\"react-toastify\";import Navbar from\"./Navbar\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const jobRoles=[\"Software Engineer\",\"Data Analyst\",\"Cloud Engineer\",\"Network Engineer\",\"System Administrator\",\"MERN Stack Developer\"];const difficultyLevels=[\"Easy\",\"Medium\",\"Hard\"];const QuestionGenerator=()=>{const[selectedRoles,setSelectedRoles]=useState([]);const[difficulty,setDifficulty]=useState(\"Easy\");const[questions,setQuestions]=useState([]);const[userAnswers,setUserAnswers]=useState([]);const[loading,setLoading]=useState(false);const navigate=useNavigate();// Navigation Hook\nconst handleSelectRole=role=>{setSelectedRoles(prev=>prev.includes(role)?prev.filter(r=>r!==role):prev.length<6?[...prev,role]:prev);};const fetchQuestions=async()=>{if(selectedRoles.length===0){toast.error(\"Please select at least one job role.\");return;}setLoading(true);try{const res=await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/get-question\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({jobRoles:selectedRoles,difficulty})});const data=await res.json();if(data.success){setQuestions(data.questions);setUserAnswers(Array(data.questions.length).fill(\"\"));}else{toast.error(data.message);}}catch(error){console.error(error);toast.error(\"Error fetching questions. Please try again.\");}setLoading(false);};const handleAnswerChange=(index,answer)=>{setUserAnswers(prev=>{const updatedAnswers=[...prev];updatedAnswers[index]=answer;return updatedAnswers;});};const submitAnswers=async()=>{if(userAnswers.some(ans=>ans.trim()===\"\")){toast.error(\"Please answer all questions before submitting.\");return;}try{const res=await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/evaluate\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({answers:questions.map((q,index)=>({questionId:q._id,userAnswer:userAnswers[index]}))})});const data=await res.json();if(data.success){toast.success(\"Answers submitted successfully!\");navigate(\"/test-results\");}else{toast.error(data.message);}}catch(error){console.error(error);toast.error(\"Error submitting answers.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 min-h-screen\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-6 max-w-4xl\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-center mb-6 text-gray-800\",children:\"Generate Interview Questions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 bg-white p-5 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-2\",children:\"Select up to 6 Job Roles\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 sm:grid-cols-3 gap-3\",children:jobRoles.map(role=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSelectRole(role),className:\"px-4 py-2 rounded-lg transition font-medium\\n                  \".concat(selectedRoles.includes(role)?\"bg-blue-500 text-white\":\"bg-gray-200 hover:bg-gray-300\"),children:role},role))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 bg-white p-5 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-2\",children:\"Select Difficulty\"}),/*#__PURE__*/_jsx(\"select\",{value:difficulty,onChange:e=>setDifficulty(e.target.value),className:\"border p-3 rounded-lg w-full focus:ring focus:ring-blue-300\",children:difficultyLevels.map(level=>/*#__PURE__*/_jsx(\"option\",{children:level},level))})]}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchQuestions,disabled:loading,className:\"w-full px-6 py-3 font-semibold text-white rounded-lg transition \".concat(loading?\"bg-gray-700\":\" bg-gray-800 hover:bg-gray-700\"),children:loading?\"Loading...\":\"Get Questions\"}),questions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4\",children:\"Answer all questions:\"}),questions.map((q,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-4 border rounded-md bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"font-medium\",children:[index+1,\". \",q.question]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userAnswers[index],onChange:e=>handleAnswerChange(index,e.target.value),className:\"border p-3 w-full mt-2 rounded-md focus:ring focus:ring-blue-200\"})]},q._id)),/*#__PURE__*/_jsx(\"button\",{onClick:submitAnswers,className:\"w-full px-6 py-3 bg-gray-800 text-white rounded-lg mt-3 hover:bg-gray-700 transition\",children:\"Submit All Answers\"})]})]})]});};export default QuestionGenerator;","map":{"version":3,"names":["React","useState","useNavigate","toast","Navbar","jsx","_jsx","jsxs","_jsxs","jobRoles","difficultyLevels","QuestionGenerator","selectedRoles","setSelectedRoles","difficulty","setDifficulty","questions","setQuestions","userAnswers","setUserAnswers","loading","setLoading","navigate","handleSelectRole","role","prev","includes","filter","r","length","fetchQuestions","error","res","fetch","method","credentials","headers","body","JSON","stringify","data","json","success","Array","fill","message","console","handleAnswerChange","index","answer","updatedAnswers","submitAnswers","some","ans","trim","answers","map","q","questionId","_id","userAnswer","className","children","onClick","concat","value","onChange","e","target","level","disabled","question","type"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/Interview Prep mern/frontend/src/components/QuestionGenerator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst jobRoles = [\r\n  \"Software Engineer\", \"Data Analyst\", \"Cloud Engineer\",\r\n  \"Network Engineer\", \"System Administrator\", \"MERN Stack Developer\"\r\n];\r\n\r\nconst difficultyLevels = [\"Easy\", \"Medium\", \"Hard\"];\r\n\r\nconst QuestionGenerator = () => {\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [difficulty, setDifficulty] = useState(\"Easy\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate(); // Navigation Hook\r\n\r\n  const handleSelectRole = (role) => {\r\n    setSelectedRoles(prev =>\r\n      prev.includes(role) ? prev.filter(r => r !== role) : prev.length < 6 ? [...prev, role] : prev\r\n    );\r\n  };\r\n\r\n  const fetchQuestions = async () => {\r\n    if (selectedRoles.length === 0) {\r\n      toast.error(\"Please select at least one job role.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/get-question\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ jobRoles: selectedRoles, difficulty }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setQuestions(data.questions);\r\n        setUserAnswers(Array(data.questions.length).fill(\"\"));\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching questions. Please try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    setUserAnswers(prev => {\r\n      const updatedAnswers = [...prev];\r\n      updatedAnswers[index] = answer;\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  const submitAnswers = async () => {\r\n    if (userAnswers.some(ans => ans.trim() === \"\")) {\r\n      toast.error(\"Please answer all questions before submitting.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/evaluate\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          answers: questions.map((q, index) => ({\r\n            questionId: q._id,\r\n            userAnswer: userAnswers[index],\r\n          })),\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        toast.success(\"Answers submitted successfully!\");\r\n        navigate(\"/test-results\"); \r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error submitting answers.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <Navbar />\r\n      <div className=\"container mx-auto p-6 max-w-4xl\">\r\n        <h2 className=\"text-3xl font-bold text-center mb-6 text-gray-800\">Generate Interview Questions</h2>\r\n\r\n        {/* Job Role Selection */}\r\n        <div className=\"mb-6 bg-white p-5 rounded-lg shadow-md\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Select up to 6 Job Roles</h3>\r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\r\n            {jobRoles.map(role => (\r\n              <button \r\n                key={role}\r\n                onClick={() => handleSelectRole(role)}\r\n                className={`px-4 py-2 rounded-lg transition font-medium\r\n                  ${selectedRoles.includes(role) ? \"bg-blue-500 text-white\" : \"bg-gray-200 hover:bg-gray-300\"}`}\r\n              >\r\n                {role}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Difficulty Selection */}\r\n        <div className=\"mb-6 bg-white p-5 rounded-lg shadow-md\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Select Difficulty</h3>\r\n          <select\r\n            value={difficulty}\r\n            onChange={(e) => setDifficulty(e.target.value)}\r\n            className=\"border p-3 rounded-lg w-full focus:ring focus:ring-blue-300\"\r\n          >\r\n            {difficultyLevels.map(level => (\r\n              <option key={level}>{level}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Fetch Questions Button */}\r\n        <button\r\n          onClick={fetchQuestions}\r\n          disabled={loading}\r\n          className={`w-full px-6 py-3 font-semibold text-white rounded-lg transition ${loading ? \"bg-gray-700\" : \" bg-gray-800 hover:bg-gray-700\"}`}\r\n        >\r\n          {loading ? \"Loading...\" : \"Get Questions\"}\r\n        </button>\r\n\r\n        {/* Display Questions and Answer Fields */}\r\n        {questions.length > 0 && (\r\n          <div className=\"mt-6 bg-white p-6 rounded-lg shadow-md\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Answer all questions:</h3>\r\n            {questions.map((q, index) => (\r\n              <div key={q._id} className=\"mb-4 p-4 border rounded-md bg-gray-50\">\r\n                <p className=\"font-medium\">{index + 1}. {q.question}</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={userAnswers[index]}\r\n                  onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n                  className=\"border p-3 w-full mt-2 rounded-md focus:ring focus:ring-blue-200\"\r\n                />\r\n              </div>\r\n            ))}\r\n            <button\r\n              onClick={submitAnswers}\r\n              className=\"w-full px-6 py-3 bg-gray-800 text-white rounded-lg mt-3 hover:bg-gray-700 transition\"\r\n            >\r\n              Submit All Answers\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}