{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{PieChart,Pie,Cell,Tooltip,Legend}from\"recharts\";import Navbar from\"./Navbar\";import{toast}from\"react-toastify\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COLORS=[\"#4CAF50\",\"#F44336\"];// Green for correct, Red for incorrect\nconst TestResults=()=>{const[results,setResults]=useState(null);const[showDetails,setShowDetails]=useState(false);const navigate=useNavigate();useEffect(()=>{const fetchResults=async()=>{try{const res=await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/get-test-results\",{method:\"GET\",credentials:\"include\"});const data=await res.json();if(data.success){setResults(data.testHistory);}else{toast.erroe(data.message);navigate(\"/\");}}catch(error){console.error(\"Error fetching test results:\",error);}};fetchResults();},[navigate]);if(!results)return/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-10 text-xl\",children:\"Loading results...\"});const correctCount=results.questionsAttempted.filter(q=>q.userAnswer===q.correctAnswer).length;const incorrectCount=results.questionsAttempted.length-correctCount;const data=[{name:\"Correct\",value:correctCount},{name:\"Incorrect\",value:incorrectCount}];return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-900 min-h-screen\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-6 max-w-3xl text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold mb-6 text-gray-800 dark:text-white\",children:\"Test Results\"}),/*#__PURE__*/_jsxs(PieChart,{width:300,height:300,className:\"mx-auto cursor-pointer\",onClick:()=>setShowDetails(!showDetails),children:[/*#__PURE__*/_jsx(Pie,{data:data,dataKey:\"value\",cx:\"50%\",cy:\"50%\",outerRadius:100,children:data.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index]},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{})]}),showDetails&&results.questionsAttempted.map((q,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 p-4 rounded-md mt-4 text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-800 dark:text-white\",children:q.questionId.question}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 dark:text-gray-300\",children:[\"Your Answer: \",q.userAnswer]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 dark:text-gray-300\",children:[\"Correct Answer: \",q.correctAnswer]})]},index))]})]});};export default TestResults;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PieChart","Pie","Cell","Tooltip","Legend","Navbar","toast","jsx","_jsx","jsxs","_jsxs","COLORS","TestResults","results","setResults","showDetails","setShowDetails","navigate","fetchResults","res","fetch","method","credentials","data","json","success","testHistory","erroe","message","error","console","className","children","correctCount","questionsAttempted","filter","q","userAnswer","correctAnswer","length","incorrectCount","name","value","width","height","onClick","dataKey","cx","cy","outerRadius","map","entry","index","fill","concat","questionId","question"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/Interview Prep mern/frontend/src/components/TestResults.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\r\nimport Navbar from \"./Navbar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst COLORS = [\"#4CAF50\", \"#F44336\"]; // Green for correct, Red for incorrect\r\n\r\nconst TestResults = () => {\r\n  const [results, setResults] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      try {\r\n        const res = await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/get-test-results\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          setResults(data.testHistory);\r\n        } else {\r\n          toast.erroe(data.message);\r\n          navigate(\"/\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching test results:\", error);\r\n      }\r\n    };\r\n\r\n    fetchResults();\r\n  }, [navigate]);\r\n\r\n  if (!results) return <div className=\"text-center mt-10 text-xl\">Loading results...</div>;\r\n\r\n  const correctCount = results.questionsAttempted.filter(q => q.userAnswer === q.correctAnswer).length;\r\n  const incorrectCount = results.questionsAttempted.length - correctCount;\r\n\r\n  const data = [\r\n    { name: \"Correct\", value: correctCount },\r\n    { name: \"Incorrect\", value: incorrectCount },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 dark:bg-gray-900 min-h-screen\">\r\n      <Navbar />\r\n      <div className=\"container mx-auto p-6 max-w-3xl text-center\">\r\n        <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white\">Test Results</h2>\r\n        <PieChart width={300} height={300} className=\"mx-auto cursor-pointer\" onClick={() => setShowDetails(!showDetails)}>\r\n          <Pie data={data} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={100}>\r\n            {data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index]} />)}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend />\r\n        </PieChart>\r\n\r\n        {showDetails && results.questionsAttempted.map((q, index) => (\r\n          <div key={index} className=\"bg-white dark:bg-gray-800 p-4 rounded-md mt-4 text-left\">\r\n            <p className=\"text-gray-800 dark:text-white\">{q.questionId.question}</p>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">Your Answer: {q.userAnswer}</p>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">Correct Answer: {q.correctAnswer}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestResults;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,QAAQ,CAAEC,GAAG,CAAEC,IAAI,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAC/D,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,MAAM,CAAG,CAAC,SAAS,CAAE,SAAS,CAAC,CAAE;AAEvC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAAoB,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,uFAAuF,CAAE,CAC/GC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SACf,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAC7B,GAAID,IAAI,CAACE,OAAO,CAAE,CAChBX,UAAU,CAACS,IAAI,CAACG,WAAW,CAAC,CAC9B,CAAC,IAAM,CACLpB,KAAK,CAACqB,KAAK,CAACJ,IAAI,CAACK,OAAO,CAAC,CACzBX,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAE,MAAOY,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAEDX,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAACD,QAAQ,CAAC,CAAC,CAEd,GAAI,CAACJ,OAAO,CAAE,mBAAOL,IAAA,QAAKuB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,oBAAkB,CAAK,CAAC,CAExF,KAAM,CAAAC,YAAY,CAAGpB,OAAO,CAACqB,kBAAkB,CAACC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,GAAKD,CAAC,CAACE,aAAa,CAAC,CAACC,MAAM,CACpG,KAAM,CAAAC,cAAc,CAAG3B,OAAO,CAACqB,kBAAkB,CAACK,MAAM,CAAGN,YAAY,CAEvE,KAAM,CAAAV,IAAI,CAAG,CACX,CAAEkB,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAET,YAAa,CAAC,CACxC,CAAEQ,IAAI,CAAE,WAAW,CAAEC,KAAK,CAAEF,cAAe,CAAC,CAC7C,CAED,mBACE9B,KAAA,QAAKqB,SAAS,CAAC,2CAA2C,CAAAC,QAAA,eACxDxB,IAAA,CAACH,MAAM,GAAE,CAAC,cACVK,KAAA,QAAKqB,SAAS,CAAC,6CAA6C,CAAAC,QAAA,eAC1DxB,IAAA,OAAIuB,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,cACvFtB,KAAA,CAACV,QAAQ,EAAC2C,KAAK,CAAE,GAAI,CAACC,MAAM,CAAE,GAAI,CAACb,SAAS,CAAC,wBAAwB,CAACc,OAAO,CAAEA,CAAA,GAAM7B,cAAc,CAAC,CAACD,WAAW,CAAE,CAAAiB,QAAA,eAChHxB,IAAA,CAACP,GAAG,EAACsB,IAAI,CAAEA,IAAK,CAACuB,OAAO,CAAC,OAAO,CAACC,EAAE,CAAC,KAAK,CAACC,EAAE,CAAC,KAAK,CAACC,WAAW,CAAE,GAAI,CAAAjB,QAAA,CACjET,IAAI,CAAC2B,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAAK5C,IAAA,CAACN,IAAI,EAAuBmD,IAAI,CAAE1C,MAAM,CAACyC,KAAK,CAAE,UAAAE,MAAA,CAA7BF,KAAK,CAA0B,CAAC,CAAC,CAC7E,CAAC,cACN5C,IAAA,CAACL,OAAO,GAAE,CAAC,cACXK,IAAA,CAACJ,MAAM,GAAE,CAAC,EACF,CAAC,CAEVW,WAAW,EAAIF,OAAO,CAACqB,kBAAkB,CAACgB,GAAG,CAAC,CAACd,CAAC,CAAEgB,KAAK,gBACtD1C,KAAA,QAAiBqB,SAAS,CAAC,yDAAyD,CAAAC,QAAA,eAClFxB,IAAA,MAAGuB,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAAEI,CAAC,CAACmB,UAAU,CAACC,QAAQ,CAAI,CAAC,cACxE9C,KAAA,MAAGqB,SAAS,CAAC,kCAAkC,CAAAC,QAAA,EAAC,eAAa,CAACI,CAAC,CAACC,UAAU,EAAI,CAAC,cAC/E3B,KAAA,MAAGqB,SAAS,CAAC,kCAAkC,CAAAC,QAAA,EAAC,kBAAgB,CAACI,CAAC,CAACE,aAAa,EAAI,CAAC,GAH7Ec,KAIL,CACN,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}