{"ast":null,"code":"var _jsxFileName = \"D:\\\\Interview Prep Project\\\\interview-Platform-frontend\\\\src\\\\components\\\\Recorder.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recorder = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [assessmentStarted, setAssessmentStarted] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [videoUrl, setVideoUrl] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedUrl, setUploadedUrl] = useState(null);\n  const [countdown, setCountdown] = useState(0);\n  const [shouldStartRecording, setShouldStartRecording] = useState(false);\n  const videoRef = useRef(null);\n  const chunks = useRef([]);\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(prev => prev - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (countdown === 0 && shouldStartRecording) {\n      initiateRecording();\n      setShouldStartRecording(false);\n    }\n  }, [countdown, shouldStartRecording]);\n  const fetchQuestions = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/v1/video/random-questions\", {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      const fiveQuestions = data.questions.slice(0, 5);\n      setQuestions(fiveQuestions);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  const initiateRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n      const recorder = new MediaRecorder(stream, {\n        mimeType: \"video/webm;codecs=vp8,opus\"\n      });\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) chunks.current.push(event.data);\n      };\n      recorder.onstop = () => {\n        const blob = new Blob(chunks.current, {\n          type: \"video/webm\"\n        });\n        setVideoBlob(blob);\n        setVideoUrl(URL.createObjectURL(blob));\n        chunks.current = [];\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing media devices:\", error);\n    }\n  };\n  const stopRecording = () => {\n    var _videoRef$current;\n    if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\n      mediaRecorder.stop();\n    }\n    const stream = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.srcObject;\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setRecording(false);\n    setMediaRecorder(null);\n  };\n  const discardVideo = () => {\n    if (videoUrl) {\n      URL.revokeObjectURL(videoUrl);\n      setVideoUrl(null);\n      setVideoBlob(null);\n      setUploadedUrl(null);\n    }\n  };\n  const saveVideo = async () => {\n    if (!videoBlob) return;\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append(\"video\", videoBlob);\n    try {\n      const response = await fetch(\"http://localhost:8000/api/v1/video/upload\", {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      });\n      if (!response.ok) throw new Error(\"Upload failed\");\n      const data = await response.json();\n      setUploadedUrl(data.url);\n      setVideoUrl(null);\n      setVideoBlob(null);\n      setUploadedUrl(null);\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(prev => prev + 1);\n      } else {\n        toast.success(\"All questions answered! Assessment completed.\");\n        setAssessmentStarted(false);\n      }\n    } catch (err) {\n      console.error(\"Upload error:\", err);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center p-6 max-w-3xl mx-auto my-10 bg-gradient-to-b from-gray-50 to-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white rounded-xl shadow-md mb-6 p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold text-center text-gray-800 mb-4\",\n          children: \"Video Interview Recorder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), !assessmentStarted ? questions.length > 0 && currentQuestionIndex >= questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-green-600 font-semibold text-xl mt-10 text-center\",\n          children: \"\\uD83C\\uDF89 You have answered all the questions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 text-center\",\n            children: \"Do you want to start the assessment?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAssessmentStarted(true);\n              setCurrentQuestionIndex(0);\n            },\n            className: \"px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700\",\n            children: \"Start Assessment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aspect-video bg-black w-full relative mb-4\",\n            children: [recording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute top-3 right-3 text-white bg-red-600 text-xs px-2 py-1 rounded-full animate-pulse\",\n              children: \"REC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              playsInline: true,\n              className: `w-full h-full ${recording ? \"block\" : \"hidden\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), !recording && videoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n              src: videoUrl,\n              controls: true,\n              className: \"w-full h-full object-contain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), !recording && !videoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-full flex items-center justify-center text-gray-400 text-sm\",\n              children: \"Camera preview will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center space-y-3 mb-4\",\n            children: recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopRecording,\n              className: \"px-4 py-2 bg-red-600 text-white rounded shadow hover:bg-red-700\",\n              children: \"Stop Recording\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this) : countdown > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl text-gray-700 font-bold\",\n              children: countdown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this) : videoUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: discardVideo,\n                className: \"px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\",\n                children: \"Discard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setCountdown(3);\n                  setShouldStartRecording(true);\n                },\n                className: \"px-4 py-2 border border-blue-600 text-blue-600 rounded hover:bg-blue-50\",\n                children: \"Record Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setCountdown(3);\n                setShouldStartRecording(true);\n              },\n              className: \"px-4 py-2 bg-green-600 text-white rounded shadow hover:bg-green-700\",\n              children: \"Start Recording\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), videoUrl && !recording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveVideo,\n              disabled: isUploading,\n              className: `w-full px-4 py-2 text-white font-medium rounded ${isUploading ? \"bg-blue-300 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700\"}`,\n              children: isUploading ? \"Uploading...\" : \"Upload Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), questions.length > 0 && currentQuestionIndex < questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full mt-6 bg-white rounded-xl shadow-md p-6 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold text-gray-800 mb-2\",\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700\",\n              children: questions[currentQuestionIndex].question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(Recorder, \"ZmvMqiRNtOim8Iv/+0kYqOV4OOI=\");\n_c = Recorder;\nexport default Recorder;\nvar _c;\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"names":["useState","useRef","useEffect","Navbar","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Recorder","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","assessmentStarted","setAssessmentStarted","recording","setRecording","mediaRecorder","setMediaRecorder","videoBlob","setVideoBlob","videoUrl","setVideoUrl","isUploading","setIsUploading","uploadedUrl","setUploadedUrl","countdown","setCountdown","shouldStartRecording","setShouldStartRecording","videoRef","chunks","fetchQuestions","timer","setTimeout","prev","clearTimeout","initiateRecording","res","fetch","method","credentials","headers","data","json","fiveQuestions","slice","error","console","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","recorder","MediaRecorder","mimeType","ondataavailable","event","size","push","onstop","blob","Blob","type","URL","createObjectURL","start","stopRecording","_videoRef$current","state","stop","getTracks","forEach","track","discardVideo","revokeObjectURL","saveVideo","formData","FormData","append","response","body","ok","Error","url","length","success","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","ref","autoPlay","muted","playsInline","src","controls","disabled","question","_c","$RefreshReg$"],"sources":["D:/Interview Prep Project/interview-Platform-frontend/src/components/Recorder.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Recorder = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [assessmentStarted, setAssessmentStarted] = useState(false);\r\n\r\n  const [recording, setRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [videoBlob, setVideoBlob] = useState(null);\r\n  const [videoUrl, setVideoUrl] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadedUrl, setUploadedUrl] = useState(null);\r\n  const [countdown, setCountdown] = useState(0);\r\n  const [shouldStartRecording, setShouldStartRecording] = useState(false);\r\n\r\n  const videoRef = useRef(null);\r\n  const chunks = useRef([]);\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (countdown > 0) {\r\n      const timer = setTimeout(() => setCountdown(prev => prev - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (countdown === 0 && shouldStartRecording) {\r\n      initiateRecording();\r\n      setShouldStartRecording(false);\r\n    }\r\n  }, [countdown, shouldStartRecording]);\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/api/v1/video/random-questions\",{\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      const data = await res.json();\r\n      const fiveQuestions = data.questions.slice(0, 5);\r\n      setQuestions(fiveQuestions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching questions:\", error);\r\n    }\r\n  };\r\n\r\n  const initiateRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n\r\n      const recorder = new MediaRecorder(stream, {\r\n        mimeType: \"video/webm;codecs=vp8,opus\",\r\n      });\r\n\r\n      recorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) chunks.current.push(event.data);\r\n      };\r\n\r\n      recorder.onstop = () => {\r\n        const blob = new Blob(chunks.current, { type: \"video/webm\" });\r\n        setVideoBlob(blob);\r\n        setVideoUrl(URL.createObjectURL(blob));\r\n        chunks.current = [];\r\n      };\r\n\r\n      recorder.start();\r\n      setMediaRecorder(recorder);\r\n      setRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing media devices:\", error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\r\n      mediaRecorder.stop();\r\n    }\r\n\r\n    const stream = videoRef.current?.srcObject;\r\n    if (stream) {\r\n      stream.getTracks().forEach((track) => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n\r\n    setRecording(false);\r\n    setMediaRecorder(null);\r\n  };\r\n\r\n  const discardVideo = () => {\r\n    if (videoUrl) {\r\n      URL.revokeObjectURL(videoUrl);\r\n      setVideoUrl(null);\r\n      setVideoBlob(null);\r\n      setUploadedUrl(null);\r\n    }\r\n  };\r\n\r\n  const saveVideo = async () => {\r\n    if (!videoBlob) return;\r\n    setIsUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"video\", videoBlob);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/v1/video/upload\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Upload failed\");\r\n\r\n      const data = await response.json();\r\n      setUploadedUrl(data.url);\r\n      setVideoUrl(null);\r\n      setVideoBlob(null);\r\n      setUploadedUrl(null);\r\n\r\n      if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex((prev) => prev + 1);\r\n      } else {\r\n        toast.success(\"All questions answered! Assessment completed.\");\r\n        setAssessmentStarted(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Upload error:\", err);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Navbar/>\r\n    <div className=\"flex flex-col items-center p-6 max-w-3xl mx-auto my-10 bg-gradient-to-b from-gray-50 to-gray-100\">\r\n      <div className=\"w-full max-w-md bg-white rounded-xl shadow-md mb-6 p-6\">\r\n        <h1 className=\"text-xl font-bold text-center text-gray-800 mb-4\">\r\n          Video Interview Recorder\r\n        </h1>\r\n\r\n        {!assessmentStarted ? (\r\n          questions.length > 0 && currentQuestionIndex >= questions.length ? (\r\n            <div className=\"text-green-600 font-semibold text-xl mt-10 text-center\">\r\n              🎉 You have answered all the questions!\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <p className=\"text-gray-700 text-center\">\r\n                Do you want to start the assessment?\r\n              </p>\r\n              <button\r\n                onClick={() => {\r\n                  setAssessmentStarted(true);\r\n                  setCurrentQuestionIndex(0);\r\n                }}\r\n                className=\"px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700\"\r\n              >\r\n                Start Assessment\r\n              </button>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <>\r\n            <div className=\"aspect-video bg-black w-full relative mb-4\">\r\n              {recording && (\r\n                <div className=\"absolute top-3 right-3 text-white bg-red-600 text-xs px-2 py-1 rounded-full animate-pulse\">\r\n                  REC\r\n                </div>\r\n              )}\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                muted\r\n                playsInline\r\n                className={`w-full h-full ${recording ? \"block\" : \"hidden\"}`}\r\n              />\r\n              {!recording && videoUrl && (\r\n                <video\r\n                  src={videoUrl}\r\n                  controls\r\n                  className=\"w-full h-full object-contain\"\r\n                />\r\n              )}\r\n              {!recording && !videoUrl && (\r\n                <div className=\"h-full flex items-center justify-center text-gray-400 text-sm\">\r\n                  Camera preview will appear here\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex flex-col items-center space-y-3 mb-4\">\r\n              {recording ? (\r\n                <button\r\n                  onClick={stopRecording}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded shadow hover:bg-red-700\"\r\n                >\r\n                  Stop Recording\r\n                </button>\r\n              ) : countdown > 0 ? (\r\n                <p className=\"text-3xl text-gray-700 font-bold\">{countdown}</p>\r\n              ) : videoUrl ? (\r\n                <div className=\"flex space-x-3\">\r\n                  <button\r\n                    onClick={discardVideo}\r\n                    className=\"px-4 py-2 border rounded text-gray-600 hover:bg-gray-50\"\r\n                  >\r\n                    Discard\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCountdown(3);\r\n                      setShouldStartRecording(true);\r\n                    }}\r\n                    className=\"px-4 py-2 border border-blue-600 text-blue-600 rounded hover:bg-blue-50\"\r\n                  >\r\n                    Record Again\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <button\r\n                  onClick={() => {\r\n                    setCountdown(3);\r\n                    setShouldStartRecording(true);\r\n                  }}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded shadow hover:bg-green-700\"\r\n                >\r\n                  Start Recording\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            {videoUrl && !recording && (\r\n              <div className=\"w-full\">\r\n                <button\r\n                  onClick={saveVideo}\r\n                  disabled={isUploading}\r\n                  className={`w-full px-4 py-2 text-white font-medium rounded ${\r\n                    isUploading\r\n                      ? \"bg-blue-300 cursor-not-allowed\"\r\n                      : \"bg-blue-600 hover:bg-blue-700\"\r\n                  }`}\r\n                >\r\n                  {isUploading ? \"Uploading...\" : \"Upload Answer\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {questions.length > 0 && currentQuestionIndex < questions.length && (\r\n              <div className=\"w-full mt-6 bg-white rounded-xl shadow-md p-6 mb-6\">\r\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">\r\n                  Question {currentQuestionIndex + 1} of {questions.length}\r\n                </h2>\r\n                <p className=\"text-gray-700\">\r\n                  {questions[currentQuestionIndex].question}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recorder;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC+B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAMiC,QAAQ,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMiC,MAAM,GAAGjC,MAAM,CAAC,EAAE,CAAC;EAEzBC,SAAS,CAAC,MAAM;IACdiC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACd,IAAI2B,SAAS,GAAG,CAAC,EAAE;MACjB,MAAMO,KAAK,GAAGC,UAAU,CAAC,MAAMP,YAAY,CAACQ,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MACpE,OAAO,MAAMC,YAAY,CAACH,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIP,SAAS,KAAK,CAAC,IAAIE,oBAAoB,EAAE;MAClDS,iBAAiB,CAAC,CAAC;MACnBR,uBAAuB,CAAC,KAAK,CAAC;IAChC;EACF,CAAC,EAAE,CAACH,SAAS,EAAEE,oBAAoB,CAAC,CAAC;EAErC,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAqD,EAAC;QAC5EC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7B,MAAMC,aAAa,GAAGF,IAAI,CAACnC,SAAS,CAACsC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAChDrC,YAAY,CAACoC,aAAa,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMV,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMY,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,IAAIxB,QAAQ,CAACyB,OAAO,EAAE;QACpBzB,QAAQ,CAACyB,OAAO,CAACC,SAAS,GAAGP,MAAM;MACrC;MAEA,MAAMQ,QAAQ,GAAG,IAAIC,aAAa,CAACT,MAAM,EAAE;QACzCU,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEFF,QAAQ,CAACG,eAAe,GAAIC,KAAK,IAAK;QACpC,IAAIA,KAAK,CAAClB,IAAI,CAACmB,IAAI,GAAG,CAAC,EAAE/B,MAAM,CAACwB,OAAO,CAACQ,IAAI,CAACF,KAAK,CAAClB,IAAI,CAAC;MAC1D,CAAC;MAEDc,QAAQ,CAACO,MAAM,GAAG,MAAM;QACtB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACnC,MAAM,CAACwB,OAAO,EAAE;UAAEY,IAAI,EAAE;QAAa,CAAC,CAAC;QAC7DhD,YAAY,CAAC8C,IAAI,CAAC;QAClB5C,WAAW,CAAC+C,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;QACtClC,MAAM,CAACwB,OAAO,GAAG,EAAE;MACrB,CAAC;MAEDE,QAAQ,CAACa,KAAK,CAAC,CAAC;MAChBrD,gBAAgB,CAACwC,QAAQ,CAAC;MAC1B1C,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOgC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAMwB,aAAa,GAAGA,CAAA,KAAM;IAAA,IAAAC,iBAAA;IAC1B,IAAIxD,aAAa,IAAIA,aAAa,CAACyD,KAAK,KAAK,UAAU,EAAE;MACvDzD,aAAa,CAAC0D,IAAI,CAAC,CAAC;IACtB;IAEA,MAAMzB,MAAM,IAAAuB,iBAAA,GAAG1C,QAAQ,CAACyB,OAAO,cAAAiB,iBAAA,uBAAhBA,iBAAA,CAAkBhB,SAAS;IAC1C,IAAIP,MAAM,EAAE;MACVA,MAAM,CAAC0B,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;MACnD5C,QAAQ,CAACyB,OAAO,CAACC,SAAS,GAAG,IAAI;IACnC;IAEAzC,YAAY,CAAC,KAAK,CAAC;IACnBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAM6D,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI1D,QAAQ,EAAE;MACZgD,GAAG,CAACW,eAAe,CAAC3D,QAAQ,CAAC;MAC7BC,WAAW,CAAC,IAAI,CAAC;MACjBF,YAAY,CAAC,IAAI,CAAC;MAClBM,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMuD,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAAC9D,SAAS,EAAE;IAChBK,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAM0D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEjE,SAAS,CAAC;IAEnC,IAAI;MACF,MAAMkE,QAAQ,GAAG,MAAM7C,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtB4C,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAElD,MAAM5C,IAAI,GAAG,MAAMyC,QAAQ,CAACxC,IAAI,CAAC,CAAC;MAClCnB,cAAc,CAACkB,IAAI,CAAC6C,GAAG,CAAC;MACxBnE,WAAW,CAAC,IAAI,CAAC;MACjBF,YAAY,CAAC,IAAI,CAAC;MAClBM,cAAc,CAAC,IAAI,CAAC;MAEpB,IAAIf,oBAAoB,GAAGF,SAAS,CAACiF,MAAM,GAAG,CAAC,EAAE;QAC/C9E,uBAAuB,CAAEwB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLlC,KAAK,CAACyF,OAAO,CAAC,+CAA+C,CAAC;QAC9D7E,oBAAoB,CAAC,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC,OAAO8E,GAAG,EAAE;MACZ3C,OAAO,CAACD,KAAK,CAAC,eAAe,EAAE4C,GAAG,CAAC;IACrC,CAAC,SAAS;MACRpE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAyF,QAAA,gBACAzF,OAAA,CAACH,MAAM;MAAA6F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT7F,OAAA;MAAK8F,SAAS,EAAC,kGAAkG;MAAAL,QAAA,eAC/GzF,OAAA;QAAK8F,SAAS,EAAC,wDAAwD;QAAAL,QAAA,gBACrEzF,OAAA;UAAI8F,SAAS,EAAC,kDAAkD;UAAAL,QAAA,EAAC;QAEjE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAEJ,CAACpF,iBAAiB,GACjBJ,SAAS,CAACiF,MAAM,GAAG,CAAC,IAAI/E,oBAAoB,IAAIF,SAAS,CAACiF,MAAM,gBAC9DtF,OAAA;UAAK8F,SAAS,EAAC,wDAAwD;UAAAL,QAAA,EAAC;QAExE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAEN7F,OAAA;UAAK8F,SAAS,EAAC,sCAAsC;UAAAL,QAAA,gBACnDzF,OAAA;YAAG8F,SAAS,EAAC,2BAA2B;YAAAL,QAAA,EAAC;UAEzC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ7F,OAAA;YACE+F,OAAO,EAAEA,CAAA,KAAM;cACbrF,oBAAoB,CAAC,IAAI,CAAC;cAC1BF,uBAAuB,CAAC,CAAC,CAAC;YAC5B,CAAE;YACFsF,SAAS,EAAC,4DAA4D;YAAAL,QAAA,EACvE;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,gBAED7F,OAAA,CAAAE,SAAA;UAAAuF,QAAA,gBACEzF,OAAA;YAAK8F,SAAS,EAAC,4CAA4C;YAAAL,QAAA,GACxD9E,SAAS,iBACRX,OAAA;cAAK8F,SAAS,EAAC,2FAA2F;cAAAL,QAAA,EAAC;YAE3G;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACN,eACD7F,OAAA;cACEgG,GAAG,EAAErE,QAAS;cACdsE,QAAQ;cACRC,KAAK;cACLC,WAAW;cACXL,SAAS,EAAE,iBAAiBnF,SAAS,GAAG,OAAO,GAAG,QAAQ;YAAG;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC,EACD,CAAClF,SAAS,IAAIM,QAAQ,iBACrBjB,OAAA;cACEoG,GAAG,EAAEnF,QAAS;cACdoF,QAAQ;cACRP,SAAS,EAAC;YAA8B;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CACF,EACA,CAAClF,SAAS,IAAI,CAACM,QAAQ,iBACtBjB,OAAA;cAAK8F,SAAS,EAAC,+DAA+D;cAAAL,QAAA,EAAC;YAE/E;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEN7F,OAAA;YAAK8F,SAAS,EAAC,2CAA2C;YAAAL,QAAA,EACvD9E,SAAS,gBACRX,OAAA;cACE+F,OAAO,EAAE3B,aAAc;cACvB0B,SAAS,EAAC,iEAAiE;cAAAL,QAAA,EAC5E;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,GACPtE,SAAS,GAAG,CAAC,gBACfvB,OAAA;cAAG8F,SAAS,EAAC,kCAAkC;cAAAL,QAAA,EAAElE;YAAS;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,GAC7D5E,QAAQ,gBACVjB,OAAA;cAAK8F,SAAS,EAAC,gBAAgB;cAAAL,QAAA,gBAC7BzF,OAAA;gBACE+F,OAAO,EAAEpB,YAAa;gBACtBmB,SAAS,EAAC,yDAAyD;gBAAAL,QAAA,EACpE;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT7F,OAAA;gBACE+F,OAAO,EAAEA,CAAA,KAAM;kBACbvE,YAAY,CAAC,CAAC,CAAC;kBACfE,uBAAuB,CAAC,IAAI,CAAC;gBAC/B,CAAE;gBACFoE,SAAS,EAAC,yEAAyE;gBAAAL,QAAA,EACpF;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,gBAEN7F,OAAA;cACE+F,OAAO,EAAEA,CAAA,KAAM;gBACbvE,YAAY,CAAC,CAAC,CAAC;gBACfE,uBAAuB,CAAC,IAAI,CAAC;cAC/B,CAAE;cACFoE,SAAS,EAAC,qEAAqE;cAAAL,QAAA,EAChF;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAEL5E,QAAQ,IAAI,CAACN,SAAS,iBACrBX,OAAA;YAAK8F,SAAS,EAAC,QAAQ;YAAAL,QAAA,eACrBzF,OAAA;cACE+F,OAAO,EAAElB,SAAU;cACnByB,QAAQ,EAAEnF,WAAY;cACtB2E,SAAS,EAAE,mDACT3E,WAAW,GACP,gCAAgC,GAChC,+BAA+B,EAClC;cAAAsE,QAAA,EAEFtE,WAAW,GAAG,cAAc,GAAG;YAAe;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,EAEAxF,SAAS,CAACiF,MAAM,GAAG,CAAC,IAAI/E,oBAAoB,GAAGF,SAAS,CAACiF,MAAM,iBAC9DtF,OAAA;YAAK8F,SAAS,EAAC,oDAAoD;YAAAL,QAAA,gBACjEzF,OAAA;cAAI8F,SAAS,EAAC,0CAA0C;cAAAL,QAAA,GAAC,WAC9C,EAAClF,oBAAoB,GAAG,CAAC,EAAC,MAAI,EAACF,SAAS,CAACiF,MAAM;YAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC,eACL7F,OAAA;cAAG8F,SAAS,EAAC,eAAe;cAAAL,QAAA,EACzBpF,SAAS,CAACE,oBAAoB,CAAC,CAACgG;YAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACN;QAAA,eACD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACzF,EAAA,CA/QID,QAAQ;AAAAqG,EAAA,GAARrG,QAAQ;AAiRd,eAAeA,QAAQ;AAAC,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}