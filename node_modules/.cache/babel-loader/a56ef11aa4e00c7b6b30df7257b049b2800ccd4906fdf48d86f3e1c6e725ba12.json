{"ast":null,"code":"var _jsxFileName = \"D:\\\\Interview Prep Project\\\\interview-Platform-frontend\\\\src\\\\components\\\\TestResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\nimport Navbar from \"./Navbar\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#4CAF50\", \"#F44336\"]; // Green for correct, Red for incorrect\n\nconst TestResults = () => {\n  _s();\n  const [results, setResults] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const res = await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/get-test-results\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        const data = await res.json();\n        if (data.success) {\n          setResults(data.testHistory);\n        } else {\n          toast.erroe(data.message);\n          navigate(\"/\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching test results:\", error);\n      }\n    };\n    fetchResults();\n  }, [navigate]);\n  if (!results) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10 text-xl\",\n    children: \"Loading results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 24\n  }, this);\n  const correctCount = results.questionsAttempted.filter(q => q.userAnswer === q.correctAnswer).length;\n  const incorrectCount = results.questionsAttempted.length - correctCount;\n  const data = [{\n    name: \"Correct\",\n    value: correctCount\n  }, {\n    name: \"Incorrect\",\n    value: incorrectCount\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 dark:bg-gray-900 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-6 max-w-3xl text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white\",\n        children: \"Test Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 300,\n        height: 300,\n        className: \"mx-auto cursor-pointer\",\n        onClick: () => setShowDetails(!showDetails),\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          dataKey: \"value\",\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 100,\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), showDetails && results.questionsAttempted.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 p-4 rounded-md mt-4 text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-800 dark:text-white\",\n          children: q.questionId.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-300\",\n          children: [\"Your Answer: \", q.userAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-300\",\n          children: [\"Correct Answer: \", q.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TestResults, \"h14Ed2ZqjCTA7YusdLinTruIxMk=\", false, function () {\n  return [useNavigate];\n});\n_c = TestResults;\nexport default TestResults;\nvar _c;\n$RefreshReg$(_c, \"TestResults\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PieChart","Pie","Cell","Tooltip","Legend","Navbar","toast","jsxDEV","_jsxDEV","COLORS","TestResults","_s","results","setResults","showDetails","setShowDetails","navigate","fetchResults","res","fetch","method","credentials","data","json","success","testHistory","erroe","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","correctCount","questionsAttempted","filter","q","userAnswer","correctAnswer","length","incorrectCount","name","value","width","height","onClick","dataKey","cx","cy","outerRadius","map","entry","index","fill","questionId","question","_c","$RefreshReg$"],"sources":["D:/Interview Prep Project/interview-Platform-frontend/src/components/TestResults.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\r\nimport Navbar from \"./Navbar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst COLORS = [\"#4CAF50\", \"#F44336\"]; // Green for correct, Red for incorrect\r\n\r\nconst TestResults = () => {\r\n  const [results, setResults] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      try {\r\n        const res = await fetch(\"https://interview-platform-backend-xp3r.onrender.com/api/v1/question/get-test-results\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          setResults(data.testHistory);\r\n        } else {\r\n          toast.erroe(data.message);\r\n          navigate(\"/\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching test results:\", error);\r\n      }\r\n    };\r\n\r\n    fetchResults();\r\n  }, [navigate]);\r\n\r\n  if (!results) return <div className=\"text-center mt-10 text-xl\">Loading results...</div>;\r\n\r\n  const correctCount = results.questionsAttempted.filter(q => q.userAnswer === q.correctAnswer).length;\r\n  const incorrectCount = results.questionsAttempted.length - correctCount;\r\n\r\n  const data = [\r\n    { name: \"Correct\", value: correctCount },\r\n    { name: \"Incorrect\", value: incorrectCount },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 dark:bg-gray-900 min-h-screen\">\r\n      <Navbar />\r\n      <div className=\"container mx-auto p-6 max-w-3xl text-center\">\r\n        <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white\">Test Results</h2>\r\n        <PieChart width={300} height={300} className=\"mx-auto cursor-pointer\" onClick={() => setShowDetails(!showDetails)}>\r\n          <Pie data={data} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={100}>\r\n            {data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index]} />)}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend />\r\n        </PieChart>\r\n\r\n        {showDetails && results.questionsAttempted.map((q, index) => (\r\n          <div key={index} className=\"bg-white dark:bg-gray-800 p-4 rounded-md mt-4 text-left\">\r\n            <p className=\"text-gray-800 dark:text-white\">{q.questionId.question}</p>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">Your Answer: {q.userAnswer}</p>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">Correct Answer: {q.correctAnswer}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}