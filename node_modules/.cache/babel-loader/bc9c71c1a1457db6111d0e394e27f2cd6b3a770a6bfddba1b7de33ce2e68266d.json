{"ast":null,"code":"var _jsxFileName = \"D:\\\\Interview Prep Project\\\\interview-Platform-frontend\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    // Check if user has a theme preference in localStorage\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme === 'dark';\n  });\n  useEffect(() => {\n    // Update the class on the document element when darkMode changes\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"EcqkI3AW2It1+x2ikQZqsHRM7kM=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","savedTheme","localStorage","getItem","document","documentElement","classList","add","setItem","remove","toggleDarkMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","undefined","Error","$RefreshReg$"],"sources":["D:/Interview Prep Project/interview-Platform-frontend/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    // Check if user has a theme preference in localStorage\r\n    const savedTheme = localStorage.getItem('theme');\r\n    return savedTheme === 'dark';\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Update the class on the document element when darkMode changes\r\n    if (darkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,KAAK,MAAM;EAC9B,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,QAAQ,EAAE;MACZK,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACjDP,YAAY,CAACM,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BV,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,QAAQ;MAAEW;IAAe,CAAE;IAAAb,QAAA,EACxDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CA3BWF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AA6B1B,OAAO,MAAMsB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG9B,UAAU,CAACK,YAAY,CAAC;EACxC,IAAIyB,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}